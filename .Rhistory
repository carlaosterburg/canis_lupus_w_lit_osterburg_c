geom_sf(data = sf_countries, fill = "#ded6c2", color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "#e5ddc6", size = .15)
world_map <-base_map +
geom_sf(
data = sf_coords, aes(shape = exact_loc),
size = 1.3, color = "white"
) +
geom_sf(
data = sf_coords, aes(shape = exact_loc, fill = year_pub),
size = 1.1, stroke = .3
) +
scale_fill_viridis_c(
option = "H", direction = -1, end = .9, name = "Year of Publication",
guide = guide_colorsteps(
barwidth = unit(11, "lines"), barheight = unit(.5, "lines"),
title.position = "top", order = 1, show.limits = TRUE
)
) +
scale_shape_manual(
values = c(21, 23), name = "Exact Location?", labels = c("No", "Yes"),
guide = guide_legend(title.position = "top", order = 2,
override.aes = list(fill = "#289689", size = 4))
)
world_map
ggsave(here::here("plots", "map_coords_year_h_transp.png"),
width = 9, height = 5, dpi = 500)
ggsave(here::here("plots", "map_coords_year_h_white.png"),
width = 9, height = 5, dpi = 500, bg = "white")
world_map <-base_map +
geom_sf(
data = sf_coords, aes(shape = exact_loc),
size = 1.3, color = "white"
) +
geom_sf(
data = sf_coords, aes(shape = exact_loc, fill = year_pub),
size = 1.1, stroke = .3
) +
scale_fill_viridis_c(
option = "C", direction = -1, end = .9, name = "Year of Publication",
guide = guide_colorsteps(
barwidth = unit(11, "lines"), barheight = unit(.5, "lines"),
title.position = "top", order = 1, show.limits = TRUE
)
) +
scale_shape_manual(
values = c(21, 23), name = "Exact Location?", labels = c("No", "Yes"),
guide = guide_legend(title.position = "top", order = 2,
override.aes = list(fill = "#289689", size = 4))
)
world_map
world_map <-base_map +
geom_sf(
data = sf_coords, aes(shape = exact_loc),
size = 1.3, color = "white"
) +
geom_sf(
data = sf_coords, aes(shape = exact_loc, fill = year_pub),
size = 1.1, stroke = .3
) +
scale_fill_viridis_c(
option = "D", direction = -1, end = .9, name = "Year of Publication",
guide = guide_colorsteps(
barwidth = unit(11, "lines"), barheight = unit(.5, "lines"),
title.position = "top", order = 1, show.limits = TRUE
)
) +
scale_shape_manual(
values = c(21, 23), name = "Exact Location?", labels = c("No", "Yes"),
guide = guide_legend(title.position = "top", order = 2,
override.aes = list(fill = "#289689", size = 4))
)
base_map <-
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "#ded6c2", color = "#ded6c2", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_countries, fill = "#ded6c2", color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "#e5ddc6", size = .15)
world_map <-base_map +
geom_sf(
data = sf_coords, aes(shape = exact_loc),
size = 1.3, color = "white"
) +
geom_sf(
data = sf_coords, aes(shape = exact_loc, fill = year_pub),
size = 1.1, stroke = .3
) +
scale_fill_viridis_c(
option = "D", direction = -1, end = .9, name = "Year of Publication",
guide = guide_colorsteps(
barwidth = unit(11, "lines"), barheight = unit(.5, "lines"),
title.position = "top", order = 1, show.limits = TRUE
)
) +
scale_shape_manual(
values = c(21, 23), name = "Exact Location?", labels = c("No", "Yes"),
guide = guide_legend(title.position = "top", order = 2,
override.aes = list(fill = "#289689", size = 4))
)
world_map
ggsave(here::here("plots", "map_coords_year_h_transp.png"),
width = 9, height = 5, dpi = 500)
ggsave(here::here("plots", "map_coords_year_h_white.png"),
width = 9, height = 5, dpi = 500, bg = "white")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE,
fig.width = 9, fig.height = 5, dpi = 500,
retina = 1, fig.showtext = TRUE, layout = "l-page")
rm(list=ls)
rm(list=ls())
library(tidyverse)
library(sf)
library(rnaturalearth)
library(rmapshaper)
library(scico)
library(here)
library(viridis)
theme_set(theme_void(base_family = "TrebuchetMS", base_size = 11))
theme_update(
legend.position = "top",
legend.spacing = unit(2, "lines"),
legend.title = element_text(face = "bold")
)
## rectangular data of counts per country
df_counts <- read_csv2(here::here("data-raw", "geo-raw", "map_countries_03112022.csv"))
## data for world map
sf_countries <-
ne_download(scale = 50, returnclass = "sf") %>%
st_transform(crs = "+proj=moll +R=10567000 +lon_0=0 +x_0=0 +y_0=0 +units=m +towgs84=0,0,0,0,0,0,0 +no_defs")
sf_borders <- rmapshaper::ms_innerlines(sf_countries)
sf_oceans <-
ne_download(category = "physical", type = "ocean", scale = 50, returnclass = "sf") %>%
st_transform(crs = st_crs(sf_countries))
sf_graticules <-
ne_download(category = "physical", type = "graticules_30", scale = 50, returnclass = "sf") %>%
st_transform(crs = st_crs(sf_countries))
## merge counts with world map
sf_counts <-
sf_countries %>%
dplyr::select("ADM0_A3") %>%
left_join(df_counts, by = c("ADM0_A3" = "country_code"))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scico::scale_fill_scico(
palette = "bamako", direction = -1, end = .9, name = "Number of Publications",
breaks = seq(3, 18, by = 3), na.value = "grey92",
guide = guide_colorsteps(
barwidth = unit(11, "lines"), barheight = unit(.5, "lines"),
title.position = "top", order = 1, show.limits = TRUE
)
)
ggsave(here::here("plots", "map_wolf_review_country_counts_trans.png"),
width = 9, height = 5, dpi = 500)
ggsave(here::here("plots", "map_wolf_review_country_counts_white.png"),
width = 9, height = 5, dpi = 500, bg = "white")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("tidyverse") # loads packages tidyr, ggplot2 and dplyr
library("sf") # load sf package used for spatial data
library ("mapview") # package to create maps
library ("terra") # package to work with rasters
library("lme4") # package for linear regression
theme_set(theme_minimal(base_size = 14)) # set ggplot theme
setwd(here::here())
plots <- file.path(here::here("plots")) # species where to save plots
data.output <- file.path(here::here("output")) # specifies where to save outputs
data.input <- file.path(here::here("data-raw","r-raw"))
litter_sizes <- read.csv2(paste0(data.input,"/no_cubs_17102022.csv"), header=TRUE, sep=";", dec = ".")
forest_loss <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_forloss2022-11-11.rds"))
ecoregions <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_eco2022-11-10.rds"))
devthreats <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_dev_threat2022-11-10.rds"))
protected_areas <-readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_wdpa2022-11-10.rds"))
accessibility <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_access2022-11-10.rds"))
biomes <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_biomes2022-11-13.rds"))
human_footprint <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_hfp2022-11-11.rds"))
# forest loss
forloss_ls_ID <- litter_sizes %>%
left_join(forest_loss,by="study_ID") %>%
dplyr::select(study_ID,no_cubs,forloss_drivers_prj,country) %>%
rename(ID=study_ID,forloss=forloss_drivers_prj) %>%
mutate(no_cubs=as.numeric(no_cubs)) %>%
mutate(forloss_standard=scale(forloss))
# ecoregions
eco_ls_ID <- litter_sizes %>%
left_join(ecoregions, by="study_ID") %>%
dplyr::select(study_ID,no_cubs,ecoregions_wgs,country) %>%
rename(ID=study_ID,eco=ecoregions_wgs) %>%
mutate(no_cubs=as.numeric(no_cubs)) %>%
mutate(eco_standard=scale(eco))
# development threats
devthreat_ls_ID <- litter_sizes %>%
left_join(devthreats, by="study_ID") %>%
dplyr::select(study_ID,no_cubs,dev_threat_prj_maskf,country) %>%
rename(ID=study_ID, devt=dev_threat_prj_maskf) %>%
mutate(no_cubs=as.numeric(no_cubs)) %>%
mutate(devt_standard=scale(devt))
# protected areas
wdpa_ls_ID <- litter_sizes %>%
left_join(protected_areas, by="study_ID") %>%
dplyr::select(study_ID,no_cubs,wdpa_bin_prj,country) %>%
rename(ID=study_ID,wdpa=wdpa_bin_prj) %>%
mutate(no_cubs=as.numeric(no_cubs)) %>%
mutate(wdpa_standard=scale(wdpa))
# accessibility
access_ls_ID <- litter_sizes %>%
left_join(accessibility, by="study_ID") %>%
dplyr::select(study_ID,no_cubs,accessibility,country) %>%
rename(ID=study_ID,access=accessibility) %>%
mutate(no_cubs=as.numeric(no_cubs)) %>%
mutate(access_standard=scale(access))
# biomes
bio_ls_ID <- litter_sizes %>%
left_join(biomes, by="study_ID") %>%
dplyr::select(study_ID,no_cubs,biomes_wgs,country) %>%
rename(ID=study_ID,bio=biomes_wgs) %>%
mutate(no_cubs=as.numeric(no_cubs)) %>%
mutate(bio_standard=scale(bio))
# human footprint
hfp_ls_ID <- litter_sizes %>%
left_join(human_footprint, by="study_ID") %>%
dplyr::select(study_ID,no_cubs,HFP2009,country) %>%
rename(ID=study_ID,hfp=HFP2009) %>%
mutate(no_cubs=as.numeric(no_cubs)) %>%
mutate(hfp_standard=scale(hfp))
lmforloss<- glm(no_cubs~forloss_standard,data=forloss_ls_ID, family="poisson")
plot(lmforloss)
print(lmforloss)
summary(lmforloss)
fit_quasi <- glm(no_cubs~forloss_standard + factor(country))
fit_quasi <- glm(no_cubs~forloss_standard + factor(country), data=forloss_ls_ID, family="poisson")
print(fit_quasi)
# ecoregions
lmeco<- glm(no_cubs~eco_standard,data=eco_ls_ID, family="quasipoisson")
plot(lmeco)
print(lmeco)
summary(lmeco)
fit_quasi <- glm(no_cubs~forloss_standard + factor(country), data=forloss_ls_ID, family="quasipoisson")
print(fit_quasi)
summary(fit_quasi)
lmforloss2 <- glmer(no_cubs~(1|country)+forloss_standard,data=forloss_ls_ID, family="quasipoisson")
plot(lmforloss2)
summary(lmforloss2)
lmforloss2 <- glmer(no_cubs~(1|country)+forloss_standard,data=forloss_ls_ID, family="quasipoisson")
lmforloss2 <- lmer(no_cubs~(1|country)+forloss_standard,data=forloss_ls_ID, family="quasipoisson")
lmforloss2 <- lmer(no_cubs~(1|country)+forloss_standard,data=forloss_ls_ID, family=quasipoisson())
lmforloss2 <- glmer(no_cubs~(1|country)+forloss_standard,data=forloss_ls_ID, family=poisson())
lmforloss2 <- glmer(no_cubs~(1|country)+forloss_standard,data=forloss_ls_ID, family=poisson())
plot(lmforloss2)
summary(lmforloss2)
summary(lmforloss2)
fit_quasi <- glm(no_cubs~forloss_standard + factor(country), data=forloss_ls_ID, family="quasipoisson")
summary(lmforloss2)
fit_quasi <- glm(no_cubs~forloss_standard + factor(country), data=forloss_ls_ID, family="quasipoisson")
summary(fit_quasi)
lmforloss2 <- glmer(no_cubs~(1|country)+forloss_standard,data=forloss_ls_ID, family="gamma")
lmforloss2 <- glmer(no_cubs~(1|country)+forloss_standard,data=forloss_ls_ID, family="log")
lmforloss2 <- glmer(no_cubs~(1|country)+forloss_standard,data=forloss_ls_ID, family="Gamma")
plot(lmforloss2)
summary(lmforloss2)
lmforloss2 <- glmer(no_cubs~(1|country)+forloss_standard,data=forloss_ls_ID, family="binomial")
lmforloss2 <- glmer(no_cubs~(1|country)+forloss_standard,data=forloss_ls_ID, family="poisson")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("tidyverse") # loads packages tidyr, ggplot2 and dplyr
library("sf") # load sf package used for spatial data
library ("mapview") # package to create maps
library ("raster") # package to work with rasters
library("lme4") # package for linear regression
theme_set(theme_minimal(base_size = 14)) # set ggplot theme
setwd(here::here())
plots <- file.path(here::here("plots")) # species where to save plots
data.output <- file.path(here::here("output")) # specifies where to save outputs
data.input <- file.path(here::here("data-raw","r-raw"))
mortality_data <- read.csv2(paste0(data.input,"/mortality_13112022.csv"), header=TRUE, sep=";", dec = ".")
forest_loss <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_forloss2022-11-11.rds"))
ecoregions <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_eco2022-11-10.rds"))
devthreats <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_dev_threat2022-11-10.rds"))
protected_areas <-readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_wdpa2022-11-10.rds"))
accessibility <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_access2022-11-10.rds"))
biomes <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_biomes2022-11-13.rds"))
# forest loss
mortality_forloss_ID <- mortality_data %>%
left_join(forest_loss,by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,forloss_drivers_prj,country) %>%
rename(ID=study_ID,mortality=calc_surv_rate,forloss=forloss_drivers_prj) %>%
mutate(mortality=as.numeric(mortality)) %>%
mutate(forloss_standard=scale(forloss))
# ecoregions
eco_mort_ID <- mortality_data %>%
left_join(ecoregions, by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,ecoregions_wgs,country) %>%
rename(ID=study_ID,mortality=calc_surv_rate, eco=ecoregions_wgs) %>%
mutate(mortality=as.numeric(mortality)) %>%
mutate(eco_standard=scale(eco))
# development threats
devthreat_mort_ID <- mortality_data %>%
left_join(devthreats, by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,dev_threat_prj_maskf,country) %>%
rename(ID=study_ID,mortality=calc_surv_rate, devt=dev_threat_prj_maskf) %>%
mutate(mortality=as.numeric(mortality)) %>%
mutate(devt_standard=scale(devt))
# protected areas
wdpa_mort_ID <- mortality_data %>%
left_join(protected_areas, by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,wdpa_bin_prj,country) %>%
rename(ID=study_ID,mortality=calc_surv_rate, wdpa=wdpa_bin_prj) %>%
mutate(mortality=as.numeric(mortality)) %>%
mutate(wdpa_standard=scale(wdpa))
# accessibility
access_mort_ID <- mortality_data %>%
left_join(accessibility, by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,accessibility,country) %>%
rename(ID=study_ID,mortality=calc_surv_rate, access=accessibility) %>%
mutate(mortality=as.numeric(mortality)) %>%
mutate(access_standard=scale(access))
# biomes
bio_mort_ID <- mortality_data %>%
left_join(biomes, by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,biomes_wgs,country) %>%
rename(ID=study_ID,mortality=calc_surv_rate, bio=biomes_wgs) %>%
mutate(mortality=as.numeric(mortality)) %>%
mutate(bio_standard=scale(bio))
mortality_data
View(mortality_data)
class(mor)
class(mortality_data)
summary(mortality_data)
plot(lmpas)
# protected areas
lmpas<- glm(mortality~wdpa_standard,data=wdpa_mort_ID, family="binomial")
plot(lmpas)
print(lmpas)
summary(lmpas)
lmpas2 <- glmer(mortality~(1|ID)+wdpa_standard,data=wdpa_mort_ID, family="binomial")
summary(lmpas)
countrywdpa <- glmer(mortality~(1|country)+wdpa_standard, data=wdpa_mort_ID, family="binomial")
summary(countrywdpa)
lmforlosscountry <-glmer(mortality~(1|country)+forloss_standard, data=mortality_forloss_ID, family="binomial")
plot(lmforlosscountry)
print(lmforlosscountry)
summary(lmforlosscountry)
lmforlosscountry2 <-glmer(mortality~forloss_standard + country, data=mortality_forloss_ID, family="binomial")
lmforlosscountry2 <-glmer(mortality~forloss_standard + (1|country), data=mortality_forloss_ID, family="binomial")
summary(lmforlosscountry2)
rm(lmforlosscountry2)
# forest loss
mortality_forloss_ID <- mortality_data %>%
left_join(forest_loss,by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,forloss_drivers_prj,country,age_class) %>%
rename(ID=study_ID,mortality=calc_surv_rate,forloss=forloss_drivers_prj) %>%
mutate(mortality=as.numeric(mortality)) %>%
mutate(forloss_standard=scale(forloss))
# ecoregions
eco_mort_ID <- mortality_data %>%
left_join(ecoregions, by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,ecoregions_wgs,country, age_class) %>%
rename(ID=study_ID,mortality=calc_surv_rate, eco=ecoregions_wgs) %>%
mutate(mortality=as.numeric(mortality)) %>%
mutate(eco_standard=scale(eco))
devthreat_mort_ID <- mortality_data %>%
left_join(devthreats, by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,dev_threat_prj_maskf,country,age_class) %>%
rename(ID=study_ID,mortality=calc_surv_rate, devt=dev_threat_prj_maskf) %>%
mutate(mortality=as.numeric(mortality)) %>%
mutate(devt_standard=scale(devt))
wdpa_mort_ID <- mortality_data %>%
left_join(protected_areas, by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,wdpa_bin_prj,country,age_class) %>%
rename(ID=study_ID,mortality=calc_surv_rate, wdpa=wdpa_bin_prj) %>%
mutate(mortality=as.numeric(mortality)) %>%
mutate(wdpa_standard=scale(wdpa))
access_mort_ID <- mortality_data %>%
left_join(accessibility, by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,accessibility,country,age_class) %>%
rename(ID=study_ID,mortality=calc_surv_rate, access=accessibility) %>%
mutate(mortality=as.numeric(mortality)) %>%
mutate(access_standard=scale(access))
bio_mort_ID <- mortality_data %>%
left_join(biomes, by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,biomes_wgs,country,age_class) %>%
rename(ID=study_ID,mortality=calc_surv_rate, bio=biomes_wgs) %>%
mutate(mortality=as.numeric(mortality)) %>%
mutate(bio_standard=scale(bio))
lmforlosscountry <-glmer(mortality~(1|age_class)+forloss_standard, data=mortality_forloss_ID, family="binomial")
plot(lmforlosscountry)
lmforlossage <-glmer(mortality~(1|age_class)+forloss_standard, data=mortality_forloss_ID, family="binomial")
print(lmforlossage)
summary(lmforlossage)
head(mortality_forloss_ID)
class(mortality_forloss_ID$age_class)
# forest loss
mortality_forloss_ID <- mortality_data %>%
left_join(forest_loss,by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,forloss_drivers_prj,country,age_class) %>%
rename(ID=study_ID,mortality=calc_surv_rate,forloss=forloss_drivers_prj) %>%
mutate(mortality=as.numeric(mortality)) %>%
mutate(forloss_standard=scale(forloss)) %>%
as.factor(age_class)
# forest loss
mortality_forloss_ID <- mortality_data %>%
left_join(forest_loss,by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,forloss_drivers_prj,country,age_class) %>%
rename(ID=study_ID,mortality=calc_surv_rate,forloss=forloss_drivers_prj) %>%
mutate(mortality=as.numeric(mortality)) %>%
mutate(forloss_standard=scale(forloss)) %>%
is.bool(age_class)
# forest loss
mortality_forloss_ID <- mortality_data %>%
left_join(forest_loss,by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,forloss_drivers_prj,country,age_class) %>%
rename(ID=study_ID,mortality=calc_surv_rate,forloss=forloss_drivers_prj) %>%
mutate(mortality=as.numeric(mortality)) %>%
mutate(forloss_standard=scale(forloss)) %>%
mutate(age_class=is.bool(age_class))
# forest loss
mortality_forloss_ID <- mortality_data %>%
left_join(forest_loss,by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,forloss_drivers_prj,country,age_class) %>%
rename(ID=study_ID,mortality=calc_surv_rate,forloss=forloss_drivers_prj) %>%
mutate(mortality=as.numeric(mortality)) %>%
mutate(forloss_standard=scale(forloss)) %>%
# ecoregions
eco_mort_ID <- mortality_data %>%
left_join(ecoregions, by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,ecoregions_wgs,country, age_class) %>%
rename(ID=study_ID,mortality=calc_surv_rate, eco=ecoregions_wgs) %>%
mutate(mortality=as.numeric(mortality)) %>%
mutate(eco_standard=scale(eco))
head(mortality_forloss_ID2)
# forest loss
mortality_forloss_ID <- mortality_data %>%
left_join(forest_loss,by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,forloss_drivers_prj,country,age_class) %>%
rename(ID=study_ID,mortality=calc_surv_rate,forloss=forloss_drivers_prj) %>%
mutate(mortality=as.numeric(mortality)) %>%
mutate(forloss_standard=scale(forloss)) %>%
mortality_forloss_ID2 <- mortality_forloss_ID
# forest loss
mortality_forloss_ID <- mortality_data %>%
left_join(forest_loss,by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,forloss_drivers_prj,country,age_class) %>%
rename(ID=study_ID,mortality=calc_surv_rate,forloss=forloss_drivers_prj) %>%
mutate(mortality=as.numeric(mortality)) %>%
mutate(forloss_standard=scale(forloss))
mortality_forloss_ID2 <- mortality_forloss_ID
head(mortality_forloss_ID2)
mortality_forloss_ID2$age_class <- as.factor(mortality_forloss_ID2$age_class)
class(age_class)
class(mortality_forloss_ID2$age_class)
lmforlossage2 <-glmer(mortality~(1|age_class)+forloss_standard, data=mortality_forloss_ID2, family="binomial")
plot(lmforlossage2)
print(lmforlossage2)
summary(lmforlossage2)
head(mortality_forloss_ID2)
is.ordered(mortality_forloss_ID2$age_class)
lmecocountry <- glmer(mortality~(1|country)+eco_standard, data=eco_mort_ID, family = "binomial")
summary(lmecocountry)
country
groups(eco_mort_ID)
eco_mort_ID
lmecoage <- glmer(mortality~(1|age_class)+eco_standard, data=eco_mort_ID, family = "binomial")
summary(lmecoage)
summary(lmdevtcountry)
lmdevtcountry <- glmer(mortality~(1|country)+devt_standard,data=devthreat_mort_ID, family="binomial")
summary(lmdevtcountry)
lmdevtage <- glmer(mortality~(1|age_class)+devt_standard,data=devthreat_mort_ID, family="binomial")
summary(lmdevtage)
lmagewdpa <- glmer(mortality~(1|age_class)+wdpa_standard, data=wdpa_mort_ID, family="binomial")
summary(lmagewdpa)
lmacccountry <- glmer(mortality~(1|country)+access_standard,data=access_mort_ID, family ="binomial")
summary(lmacccountry)
lmaccage <- glmer(mortality~(1|age_class)+access_standard,data=access_mort_ID, family ="binomial")
summary(lmaccage)
lmbiocountry <- glmer(mortality~(1|country)+bio_standard,data=bio_mort_ID, family="binomial")
summary(lmbiocountry)
lmbioage<- glmer(mortality~(1|age_class)+bio_standard,data=bio_mort_ID, family="binomial")
summary(lmbiocountry)
summary(biomes)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("tidyverse") # loads packages tidyr, ggplot2 and dplyr
library("sf") # load sf package used for spatial data
library ("mapview") # package to create maps
library ("terra") # package to work with rasters
library("lme4") # package for linear regression
theme_set(theme_minimal(base_size = 14)) # set ggplot theme
setwd(here::here())
plots <- file.path(here::here("plots")) # species where to save plots
data.output <- file.path(here::here("output")) # specifies where to save outputs
data.input <- file.path(here::here("data-raw","r-raw"))
mortality_data <- read.csv2(paste0(data.input,"/mortality_13112022.csv"), header=TRUE, sep=";", dec = ".")
human_footprint <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_hfp2022-11-11.rds"))
mortality_hfp_ID <- mortality_data %>%
left_join(human_footprint,by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,HFP2009, country, age_class) %>%
rename(ID=study_ID,mortality=calc_surv_rate,hfp=HFP2009) %>%
mutate(mortality=as.numeric(mortality)) %>%
mutate(hfp_standard=scale(hfp))
lm1 <- glm(mortality~hfp_standard,data=mortality_hfp_ID, family = "binomial")
plot(lm1)
print(lm1)
summary(lm1)
lm2 <- glmer(mortality~(1|ID)+hfp_standard,data=mortality_hfp_ID, family="binomial")
summary(lm2)
lm3 <- (mortality~(1|country)+hfp_standard,data=mortality_hfp_ID, family="binomial")
lm3 <- glmer(mortality~(1|country)+hfp_standard,data=mortality_hfp_ID, family="binomial")
summary(lm3)
lm4 <- glmer(mortality~(1|age_class)+hfp_standard, data=mortality_hfp_ID, family="binomial")
summary(lm4)
