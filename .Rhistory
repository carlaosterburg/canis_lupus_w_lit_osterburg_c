ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "H", alpha = 1, begin = 0, end = .9), space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "H", alpha = 1, begin = 0, end = .9, names="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "H", alpha = 1, begin = 0, end = .9, names="Number of Publications"), space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "H", alpha = 1, begin = 0, end = .9, name="Number of Publications"), space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "H", alpha = 1, begin = 0, end = .9, breaks=seq(3,18, b =3)), space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "H", alpha = 1, begin = 0, end = .9, breaks=seq(3,18, b =3), space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "H", alpha = 1, begin = 0, end = .9), breaks=seq(3,18, by=3), space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "H", alpha = 1, begin = 0, end = .9), breaks=seq(3,18, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "H", alpha = 1, begin = 0, end = .9), breaks=seq(3,18, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggsave(here::here("plots", "map_country_counts_viridis_trans.png"),
width = 9, height = 5, dpi = 500)
ggsave(here::here("plots", "map_country_counts_viridis_white.png"),
width = 9, height = 5, dpi = 500, bg = "white")
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "A", alpha = 1, begin = 0, end = .9), breaks=seq(3,18, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "B", alpha = 1, begin = 0, end = .9), breaks=seq(3,18, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "B", alpha = -1, begin = 0, end = .9), breaks=seq(3,18, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "B", alpha = 1, begin = -1, end = .9), breaks=seq(3,18, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "B", alpha = 1, direction = -1, begin = 0, end = .9), breaks=seq(3,18, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "C", alpha = 1, direction = -1, begin = 0, end = .9), breaks=seq(3,18, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "D", alpha = 1, direction = -1, begin = 0, end = .9), breaks=seq(3,18, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "E", alpha = 1, direction = -1, begin = 0, end = .9), breaks=seq(3,18, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "F", alpha = 1, direction = -1, begin = 0, end = .9), breaks=seq(3,18, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "G", alpha = 1, direction = -1, begin = 0, end = .9), breaks=seq(3,18, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "B", alpha = 1, direction = -1, begin = 0, end = .9), breaks=seq(3,18, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "A", alpha = 1, direction = -1, begin = 0, end = .9), breaks=seq(3,18, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "B", alpha = 1, direction = -1, begin = 0, end = .9), breaks=seq(3,18, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggsave(here::here("plots", "map_country_counts_viridis_b_trans.png"),
width = 9, height = 5, dpi = 500)
ggsave(here::here("plots", "map_country_counts_viridis_b_white.png"),
width = 9, height = 5, dpi = 500, bg = "white")
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "B", alpha = 1, direction = -1, begin = 0, end = .9), breaks=seq(3,21, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggsave(here::here("plots", "map_country_counts_viridis_b_trans.png"),
width = 9, height = 5, dpi = 500)
ggsave(here::here("plots", "map_country_counts_viridis_b_white.png"),
width = 9, height = 5, dpi = 500, bg = "white")
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "H", alpha = 1, direction = -1, begin = 0, end = .9), breaks=seq(3,21, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "H", alpha = 1, direction = 1, begin = 0, end = .9), breaks=seq(3,21, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "H", alpha = 1, direction = 1, begin = 0, end = .9), breaks=seq(3,21, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = FALSE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "H", alpha = 1, direction = 1, begin = 0, end = .9), breaks=seq(3,30, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = FALSE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "H", alpha = 1, direction = 1, begin = 0, end = .9), breaks=seq(3,33, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = FALSE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "H", alpha = 1, direction = 1, begin = 0, end = .9), breaks=seq(3,30, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "H", alpha = 1, direction = 1, begin = 0, end = .9), breaks=seq(3,30, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggsave(here::here("plots", "map_country_counts_viridis_h_trans.png"),
width = 9, height = 5, dpi = 500)
ggsave(here::here("plots", "map_country_counts_viridis_h_white.png"),
width = 9, height = 5, dpi = 500, bg = "white")
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "A", alpha = 1, direction = -1, begin = 0, end = .9), breaks=seq(3,30, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "B", alpha = 1, direction = -1, begin = 0, end = .9), breaks=seq(3,30, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "B", alpha = 1, direction = -1, begin = 0, end = .9), breaks=seq(3,30, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggsave(here::here("plots", "map_country_counts_viridis_b_trans.png"),
width = 9, height = 5, dpi = 500)
ggsave(here::here("plots", "map_country_counts_viridis_b_white.png"),
width = 9, height = 5, dpi = 500, bg = "white")
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "C", alpha = 1, direction = -1, begin = 0, end = .9), breaks=seq(3,30, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "D", alpha = 1, direction = -1, begin = 0, end = .9), breaks=seq(3,30, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "D", alpha = 1, direction = -1, begin = 0, end = .9), breaks=seq(3,30, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggsave(here::here("plots", "map_country_counts_viridis_d_trans.png"),
width = 9, height = 5, dpi = 500)
ggsave(here::here("plots", "map_country_counts_viridis_d_white.png"),
width = 9, height = 5, dpi = 500, bg = "white")
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "D", alpha = 1, direction = -1, begin = 1, end = .9), breaks=seq(3,30, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "D", alpha = 1, direction = -1, begin = 0, end = .9), breaks=seq(3,30, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "E", alpha = 1, direction = -1, begin = 0, end = .9), breaks=seq(3,30, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "F", alpha = 1, direction = -1, begin = 0, end = .9), breaks=seq(3,30, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
ggplot() +
geom_sf(data = sf_oceans, fill = "#d8e5f0", color = "#d8e5f0", size = .15) +
geom_sf(data = sf_countries, fill = "grey92", color = "grey92", size = .15) +
geom_sf(data = sf_graticules, color = "white", size = .1) +
geom_sf(data = sf_counts, aes(fill = country_count), color = "transparent", size = .01) +
geom_sf(data = sf_borders, color = "grey92", size = .15) +
scale_fill_gradientn(colours = viridis(256,option = "G", alpha = 1, direction = -1, begin = 0, end = .9), breaks=seq(3,30, by=3), name="Number of Publications", space = "Lab", na.value = "grey92", guide= guide_colorsteps(barwidth=unit(11,"lines"), barheight = unit(.5,"lines"), title.position ="top", order=1, show.limits = TRUE))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("tidyverse") # loads packages tidyr, ggplot2 and dplyr
library("sf") # load sf package used for spatial data
library ("mapview") # package to create maps
library ("raster") # package to work with rasters
library("rlist") #to work with lists
library("terra")
theme_set(theme_minimal(base_size = 14)) # set ggplot theme
setwd(here::here())
plots <- file.path(here::here("plots")) # species where to save plots
data.output <- file.path(here::here("output")) # specifies where to save outputs
data.input <- file.path(here::here("data-raw","r-raw"))
study_area_size_data <- read.csv2(paste0(data.input,"/coords_study_area_14102022.csv"), header=TRUE, sep=";", dec = ".")
summary(study_area_size_data)
str(study_area_size_data)
#extr cting the study area size and taking out the nas
study_area_size_data_no_nas <- study_area_size_data %>%
na.omit() %>%
dplyr:: select(longitude, latitude) %>%
tibble::rowid_to_column("id")
# calculating the radius of the buffer based on the study area size
buffer_size <- study_area_size_data %>%
na.omit() %>%
mutate(radius=(sqrt(study_area_size/pi) * 1000)) %>% # *1000 to convert to km
dplyr::select(radius)
#transforming the coordinates as spatial object
coords <- st_as_sf(study_area_size_data_no_nas, coords=c("longitude","latitude"), crs=4326)
#function to transform the latitude longitute projection of each poitns into the right UTM
lonlat2UTM = function(lonlat) {
utm = (floor((lonlat[1] + 180) / 6) %% 60) + 1
if(lonlat[2] > 0) {
utm + 32600
} else{
utm + 32700
}
}
#to transform in the right projection
transform_list <- function(list, crs_dataframe){
x <- list(0)
for (i in 1: length(crs_dataframe))
x[[i]] <- st_transform(list[[i]], crs_dataframe[i])
return(x)
}
# to create buffers based on a list of spatial objects
buffer_list <- function(list, buffer_size_dataframe){
y <- list(0)
for (i in 1: nrow(buffer_size_dataframe))
y[[i]] <- st_buffer(list[[i]], buffer_size_dataframe[i,])
return(y)
}
#take out the coordinates of the points
coordinates2<- cbind(study_area_size_data_no_nas$longitude, study_area_size_data_no_nas$latitude)
#transforms the coordinates into UTM
coordinatesUTM <- apply(coordinates2, 1, lonlat2UTM)
#creates a list of spatial objects based on their id
ncSplit <- split(coords, f = coords[["id"]])
#using the function to st_transform each element of the list with their corresponding UTM
list_UTM_points <- transform_list(ncSplit, coordinatesUTM)
# Create a list of buffers with their respective radius
buf_proj <- buffer_list(list_UTM_points, buffer_size)
# Retransform the whole shablam into a latitude longitude coordinate system
buf_latlong <- lapply(buf_proj, st_transform, 4326)
#recombining the hwole thing
combined <- list.rbind(buf_latlong)
combined %>%
ggplot() +
geom_sf(lwd = 0.1)
mapview(combined)
map_raster <- terra::rast(paste0(here::here("data-raw","geo-raw"),"/ecoregions_wgs.tif"))
str(map_raster)
plot(map_raster)
str(map_raster)
crs(map_raster)
plot(map_raster)
buffer_new_projection <- combined %>%
st_transform(crs = crs(map_raster))
extracted_values_mean_eco <- raster::extract(map_raster, buffer_new_projection,fun=mean, na.rm=TRUE)
extracted_values_mean_eco
saveRDS(extracted_values_mean_eco,paste0(data.output,"/data-proc/extracted_values_mean_eco",Sys.Date(),".rds"))
combined_buffer_eco <- cbind(buffer_new_projection,extracted_values_mean_eco)
mapview(combined_buffer_eco, zcol="ecoregions_wgs")
dataframe_combined_buffer_eco <- study_area_size_data %>%
na.omit() %>%
cbind(combined_buffer_eco)
saveRDS(dataframe_combined_buffer_eco,paste0(data.output,"/data-proc/dataframe_combined_buffer_eco",Sys.Date(),".rds"))
getwd()
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("tidyverse") # loads packages tidyr, ggplot2 and dplyr
library("sf") # load sf package used for spatial data
library ("mapview") # package to create maps
#library ("raster") # package to work with rasters
library("rlist") #to work with lists
library("terra")
theme_set(theme_minimal(base_size = 14)) # set ggplot theme
setwd(here::here())
plots <- file.path(here::here("plots")) # species where to save plots
data.output <- file.path(here::here("output")) # specifies where to save outputs
data.input <- file.path(here::here("data-raw","r-raw"))
study_area_size_data <- read.csv2(paste0(data.input,"/coords_study_area_14102022.csv"), header=TRUE, sep=";", dec = ".")
summary(study_area_size_data)
str(study_area_size_data)
#extracting the study area size and taking out the nas
study_area_size_data_no_nas <- study_area_size_data %>%
na.omit() %>%
dplyr:: select(longitude, latitude) %>%
tibble::rowid_to_column("id")
# calculating the radius of the buffer based on the study area size
buffer_size <- study_area_size_data %>%
na.omit() %>%
mutate(radius=(sqrt(study_area_size/pi) * 1000)) %>% # *1000 to convert to km
dplyr::select(radius)
#transforming the coordinates as spatial object
coords <- st_as_sf(study_area_size_data_no_nas, coords=c("longitude","latitude"), crs=4326)
#function to transform the latitude longitute projection of each poitns into the right UTM
lonlat2UTM = function(lonlat) {
utm = (floor((lonlat[1] + 180) / 6) %% 60) + 1
if(lonlat[2] > 0) {
utm + 32600
} else{
utm + 32700
}
}
#to transform in the right projection
transform_list <- function(list, crs_dataframe){
x <- list(0)
for (i in 1: length(crs_dataframe))
x[[i]] <- st_transform(list[[i]], crs_dataframe[i])
return(x)
}
# to create buffers based on a list of spatial objects
buffer_list <- function(list, buffer_size_dataframe){
y <- list(0)
for (i in 1: nrow(buffer_size_dataframe))
y[[i]] <- st_buffer(list[[i]], buffer_size_dataframe[i,])
return(y)
}
#take out the coordinates of the points
coordinates2<- cbind(study_area_size_data_no_nas$longitude, study_area_size_data_no_nas$latitude)
#transforms the coordinates into UTM
coordinatesUTM <- apply(coordinates2, 1, lonlat2UTM)
#creates a list of spatial objects based on their id
ncSplit <- split(coords, f = coords[["id"]])
#using the function to st_transform each element of the list with their corresponding UTM
list_UTM_points <- transform_list(ncSplit, coordinatesUTM)
# Create a list of buffers with their respective radius
buf_proj <- buffer_list(list_UTM_points, buffer_size)
# Retransform the whole shablam into a latitude longitude coordinate system
buf_latlong <- lapply(buf_proj, st_transform, 4326)
#recombining the hwole thing
combined <- list.rbind(buf_latlong)
combined %>%
ggplot() +
geom_sf(lwd = 0.1)
mapview(combined)
map_raster <- terra::rast(paste0(here::here("data-raw","geo-raw"),"/ecoregions_wgs.tif"))
str(map_raster)
crs(map_raster)
plot(map_raster)
buffer_new_projection <- combined %>%
st_transform(crs = crs(map_raster))
extracted_values_mean_eco <- raster::extract(map_raster, buffer_new_projection,fun=mean, na.rm=TRUE)
extracted_values_mean_eco
saveRDS(extracted_values_mean_eco,paste0(data.output,"/data-proc/extracted_values_mean_eco",Sys.Date(),".rds"))
combined_buffer_eco <- cbind(buffer_new_projection,extracted_values_mean_eco)
mapview(combined_buffer_eco, zcol="ecoregions_wgs")
dataframe_combined_buffer_eco <- study_area_size_data %>%
na.omit() %>%
cbind(combined_buffer_eco)
saveRDS(dataframe_combined_buffer_eco,paste0(data.output,"/data-proc/dataframe_combined_buffer_eco",Sys.Date(),".rds"))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("tidyverse") # loads packages tidyr, ggplot2 and dplyr
library("sf") # load sf package used for spatial data
library ("mapview") # package to create maps
library ("terra") # package to work with rasters
library("lme4") # package for linear regression
theme_set(theme_minimal(base_size = 14)) # set ggplot theme
setwd(here::here())
plots <- file.path(here::here("plots")) # species where to save plots
data.output <- file.path(here::here("output")) # specifies where to save outputs
data.input <- file.path(here::here("data-raw","r-raw"))
ls <- read.csv2(paste0(data.input,"/no_cubs_17102022.csv"), header=TRUE, sep=";", dec = ".")
eco <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_eco2022-11-04.rds"))
head(ls)
head(eco)
ls_eco_ID <- ls %>%
left_join(eco,by="study_ID") %>%
dplyr::select(study_ID,no_cubs,ecoregions_wgs) %>%
rename(ID=study_ID,ecoreg=ecoregions_wgs) %>%
mutate(no_cubs=as.numeric(no_cubs)) %>%
mutate(ecoreg_standard=scale(ecoreg))
lm1 <- lm(no_cubs~ecoreg_standard,data=ls_eco_ID)
plot(lm1)
print(lm1)
summary(lm1)
lm2 <- lmer(no_cubs~(1|ID)+ecoreg_standard,data=ls_eco_ID)
ggplot(lm1)
plot(lm1)
plot(lm1)
