# accessibility
access_ps_ID <- pack_sizes %>%
left_join(accessibility, by="study_ID") %>%
dplyr::select(study_ID,pack_size,accessibility,country) %>%
rename(ID=study_ID,access=accessibility) %>%
mutate(pack_size=as.numeric(pack_size)) %>%
mutate(access_standard=scale(access))
# human footprint
hfp_ps_ID <- pack_sizes %>%
left_join(human_footprint, by="study_ID") %>%
dplyr::select(study_ID,pack_size,HFP2009,country) %>%
rename(ID=study_ID,hfp=HFP2009) %>%
mutate(pack_size=as.numeric(pack_size)) %>%
mutate(hfp_standard=scale(hfp))
lmforloss3 <- glm(pack_size~(1|country)+forloss_standard, data =forloss_ps_ID, family="quasipoisson")
lmforloss3 <- glm(pack_size~(1|country)+forloss_standard, data =forloss_ps_ID, family="poisson")
lmforloss3 <- glmm(pack_size~(1|country)+forloss_standard, data =forloss_ps_ID, family="poisson")
lmforloss3 <- glmer(pack_size~(1|country)+forloss_standard, data =forloss_ps_ID, family="poisson")
print(lmforloss3)
summary(lmforloss3)
summary(lmforloss)
View(pack_sizes)
print(lmforloss3)
summary(lmhfp)
summary(lmacc)
summary(lmpas2)
summary(lmforloss)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("tidyverse") # loads packages tidyr, ggplot2 and dplyr
library("sf") # load sf package used for spatial data
library ("mapview") # package to create maps
library ("terra") # package to work with rasters
library("lme4") # package for linear regression
theme_set(theme_minimal(base_size = 14)) # set ggplot theme
getwd()
setwd("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c")
plots <- file.path(here::here("plots")) # species where to save plots
data.output <- file.path(here::here("output")) # specifies where to save outputs
data.input <- file.path(here::here("data-raw","r-raw"))
litter_sizes <- read.csv2(paste0("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c/data-raw/r-raw/no_cubs_21122022.csv"), header=TRUE, sep=";", dec = ".")
forest_loss <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_forloss2022-12-20.rds"))
protected_areas <-readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_wdpa2022-12-21.rds"))
accessibility <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_access2022-12-20.rds"))
human_footprint <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_hfp2022-12-21.rds"))
str(forest_loss)
# forest loss
forloss_ls_ID <- litter_sizes %>%
left_join(forest_loss,by="study_ID") %>%
dplyr::select(study_ID,no_cubs,forloss_drivers_prj,country) %>%
rename(ID=study_ID,forloss=forloss_drivers_prj) %>%
mutate(no_cubs=as.numeric(no_cubs)) %>%
mutate(forloss_standard=scale(forloss))
# protected areas
wdpa_ls_ID <- litter_sizes %>%
left_join(protected_areas, by="study_ID") %>%
dplyr::select(study_ID,no_cubs,wdpa_bin_prj,country) %>%
rename(ID=study_ID,wdpa=wdpa_bin_prj) %>%
mutate(no_cubs=as.numeric(no_cubs)) %>%
mutate(wdpa_standard=scale(wdpa))
# accessibility
access_ls_ID <- litter_sizes %>%
left_join(accessibility, by="study_ID") %>%
dplyr::select(study_ID,no_cubs,accessibility,country) %>%
rename(ID=study_ID,access=accessibility) %>%
mutate(no_cubs=as.numeric(no_cubs)) %>%
mutate(access_standard=scale(access))
# human footprint
hfp_ls_ID <- litter_sizes %>%
left_join(human_footprint, by="study_ID") %>%
dplyr::select(study_ID,no_cubs,HFP2009,country) %>%
rename(ID=study_ID,hfp=HFP2009) %>%
mutate(no_cubs=as.numeric(no_cubs)) %>%
mutate(hfp_standard=scale(hfp))
lmforloss<- glm(no_cubs~forloss_standard,data=forloss_ls_ID, family="quasipoisson")
plot(lmforloss)
print(lmforloss)
summary(lmforloss)
lmforloss2 <- glmer(no_cubs~(1|country)+forloss_standard,data=forloss_ls_ID, family="poisson")
plot(lmforloss2)
summary(lmforloss2)
# protected areas
lmpas<- glm(no_cubs~wdpa_standard,data=wdpa_ls_ID, family="poisson")
plot(lmpas)
print(lmpas)
summary(lmpas)
quasilmpas <- glm(no_cubs~wdpa_standard,data=wdpa_ls_ID, family="quasipoisson")
summary(quasilmpas)
lmacc<- glm(no_cubs~access_standard,data=access_ls_ID, family="poisson")
plot(lmacc)
print(lmacc)
summary(lmacc)
lmacc2<- glm(no_cubs~access_standard,data=access_ls_ID, family="quasipoisson")
summary(lmacc2)
lmhfp<- glm(no_cubs~hfp_standard,data=hfp_ls_ID, family="poisson")
plot(lmhfp)
print(lmhfp)
summary(lmhfp)
lmhfp2<- glm(no_cubs~hfp_standard,data=hfp_ls_ID, family="quasipoisson")
plot(lmhfp2)
print(lmhfp2)
summary(lmhfp2)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("tidyverse") # loads packages tidyr, ggplot2 and dplyr
library("sf") # load sf package used for spatial data
library ("mapview") # package to create maps
library ("terra") # package to work with rasters
library("lme4") # package for linear regression
theme_set(theme_minimal(base_size = 14)) # set ggplot theme
getwd()
setwd("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c")
plots <- file.path(here::here("plots")) # species where to save plots
data.output <- file.path(here::here("output")) # specifies where to save outputs
data.input <- file.path(here::here("data-raw","r-raw"))
pack_sizes <- read.csv2(paste0("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c/data-raw/r-raw/no_pack_21122022.csv"), header=TRUE, sep=";", dec = ".")
forest_loss <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_forloss2022-12-20.rds"))
protected_areas <-readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_wdpa2022-12-21.rds"))
accessibility <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_access2022-12-20.rds"))
human_footprint <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_hfp2022-12-21.rds"))
# Need to turn study_ID into a character
pack_sizes$study_ID <- as.character(pack_sizes$study_ID)
class(pack_sizes$study_ID)
str(pack_sizes)
# forest loss
forloss_ps_ID <- pack_sizes %>%
left_join(forest_loss,by="study_ID") %>%
dplyr::select(study_ID,pack_size,forloss_drivers_prj,country) %>%
rename(ID=study_ID,forloss=forloss_drivers_prj) %>%
mutate(pack_size=as.numeric(pack_size)) %>%
mutate(forloss_standard=scale(forloss))
# protected areas
wdpa_ps_ID <- pack_sizes %>%
left_join(protected_areas, by="study_ID") %>%
dplyr::select(study_ID,pack_size,wdpa_bin_prj,country) %>%
rename(ID=study_ID,wdpa=wdpa_bin_prj) %>%
mutate(pack_size=as.numeric(pack_size)) %>%
mutate(wdpa_standard=scale(wdpa))
# accessibility
access_ps_ID <- pack_sizes %>%
left_join(accessibility, by="study_ID") %>%
dplyr::select(study_ID,pack_size,accessibility,country) %>%
rename(ID=study_ID,access=accessibility) %>%
mutate(pack_size=as.numeric(pack_size)) %>%
mutate(access_standard=scale(access))
# human footprint
hfp_ps_ID <- pack_sizes %>%
left_join(human_footprint, by="study_ID") %>%
dplyr::select(study_ID,pack_size,HFP2009,country) %>%
rename(ID=study_ID,hfp=HFP2009) %>%
mutate(pack_size=as.numeric(pack_size)) %>%
mutate(hfp_standard=scale(hfp))
lmforloss3 <- glmer(pack_size~(1|country)+forloss_standard, data =forloss_ps_ID, family="poisson")
lmforloss3 <- glmer(pack_size~(1|country)+forloss_standard, data =forloss_ps_ID, family="poisson")
plot(lmforloss3)
plot(lmforloss3)
print(lmforloss3)
summary(lmforloss3)
summary(lmforloss3)
ranova(lmforloss3)
libarary("lmerTest")
library("lmerTest")
install.packages("lmerTest")
library("lmerTest")
ranova(lmforloss3)
getwd()
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("tidyverse") # loads packages tidyr, ggplot2 and dplyr
library("sf") # load sf package used for spatial data
library ("mapview") # package to create maps
library ("raster") # package to work with rasters
library("lme4") # package for linear regression
theme_set(theme_minimal(base_size = 14)) # set ggplot theme
rm("raster")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("tidyverse") # loads packages tidyr, ggplot2 and dplyr
library("sf") # load sf package used for spatial data
library ("mapview") # package to create maps
library ("terra") # package to work with rasters
library("lme4") # package for linear regression
theme_set(theme_minimal(base_size = 14)) # set ggplot theme
setwd(here::here())
plots <- file.path(here::here("plots")) # species where to save plots
data.output <- file.path(here::here("output")) # specifies where to save outputs
data.input <- file.path(here::here("data-raw","r-raw"))
survival_rates <- read.csv2(paste0("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c/data-raw/r-raw/survival_rastes_23122022.csv"), header=TRUE, sep=";", dec = ".")
survival_rates <- read.csv2(paste0("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c/data-raw/r-raw/survival_rates_23122022.csv"), header=TRUE, sep=";", dec = ".")
survival_rates <- read.csv2(paste0("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c/data-raw/r-raw/survival_rates_23122022.csv"), header=TRUE, sep=";", dec = ".")
forest_loss <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_forloss2022-12-20.rds"))
protected_areas <-readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_wdpa2022-12-21.rds"))
accessibility <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_access2022-12-20.rds"))
human_footprint <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_hfp2022-12-21.rds"))
# forest loss
forest_surv_ID <- survival_rates %>%
left_join(forest_loss,by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,forloss_drivers_prj,country,age_class_calc) %>%
rename(ID=study_ID,survival=calc_surv_rate,forloss=forloss_drivers_prj,age=age_class_calc) %>%
mutate(survival=as.numeric(survival)) %>%
mutate(forloss_standard=scale(forloss))
# protected areas
pas_surv_ID <- survival_rates %>%
left_join(protected_areas,by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,wdpa_bin_prj,country,age_class_calc) %>%
rename(ID=study_ID,survival=calc_surv_rate,wdpa=wdpa_bin_prj,age=age_class_calc) %>%
mutate(survival=as.numeric(survival)) %>%
mutate(wdpa_standard=scale(wdpa))
# accessibility
access_surv_ID <- survival_rates %>%
left_join(accessibility, by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,accessibility,country,age_class_calc) %>%
rename(ID=study_ID,survival=calc_surv_rate, access=accessibility,age=age_class_calc) %>%
mutate(survival=as.numeric(survival)) %>%
mutate(access_standard=scale(access))
# human footprint
hfp_surv_ID <- survival_rates %>%
left_join(human_footprint, by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,HFP2009,country, age_class_calc) %>%
rename(ID=study_ID,survival=calc_surv_rate,hfp=HFP2009,age=age_class_calc) %>%
mutate(survival=as.numeric(survival)) %>%
mutate(hfp_standard=scale(hfp))
# forest loss
lmforloss<- glm(mortality~forloss_standard,data=forest_surv_ID, family="binomial")
# forest loss
lmforloss<- glm(survival~forloss_standard,data=forest_surv_ID, family="binomial")
plot(lmforloss)
print(lmforloss)
summary(lmforloss)
lmforloss2 <- glmer(survival~(1|ID)+forloss_standard,data=mortality_forloss_ID, "binomial")
lmforloss2 <- glmer(survival~(1|ID)+forloss_standard,data=forest_surv_ID, "binomial")
summary(lmforloss2)
lmforlosscountry <-glmer(survival~(1|country)+forloss_standard, data=forest_surv_ID, family="binomial")
plot(lmforlosscountry)
print(lmforlosscountry)
summary(lmforlosscountry)
lmforlossage <-glmer(survival~(1|age_class_calc)+forloss_standard, data=forest_surv_ID, family="binomial")
lmforlossage <-glmer(survival~(1|age)+forloss_standard, data=forest_surv_ID, family="binomial")
plot(lmforlossage)
print(lmforlossage)
summary(lmforlossage)
lmforlossage <-glmer(survival~(1|age)+forloss_standard, data=survival_ID, family="binomial")
paslm <- glm(survival~wdpa_standard, data=pas_surv_ID, family="binomial")
plot(paslm)
print(paslm)
summary(paslm)
paslm <- glm(survival~wdpa_standard, data=pas_surv_ID, family="quasibinomial")
quasipaslm <- glm(survival~wdpa_standard, data=pas_surv_ID, family="quasibinomial")
paslm <- glm(survival~wdpa_standard, data=pas_surv_ID, family="binomial")
plot(paslm)
print(paslm)
summary(paslm)
quasipaslm <- glm(survival~wdpa_standard, data=pas_surv_ID, family="quasibinomial")
summary(quasipaslm)
paslm2 <- glmer(survival~(1|ID)+wdpa_standard,data=pas_surv_ID, "binomial")
summary(paslm2)
paslm3 <-glmer(survival~(1|country)+wdpa_standard, data=pas_surv_ID, family="binomial")
plot(paslm3)
print(paslm3)
summary(paslm3)
paslm4 <-glmer(survival~(1|age)+wdpa_standard, data=pas_surv_ID, family="binomial")
plot(paslm4)
print(paslm4)
summary(paslm4)
summary(quasipaslm)
accesslm <- glm(survival~access_standard, data=access_surv_ID, family="binomial")
plot(accesslm)
print(accesslm)
summary(accesslm)
quasiaccesslm <- glm(survival~access_standard, data=access_surv_ID, family="quasibinomial")
summary(quasiaccesslm)
accesslm2 <- glmer(survival~(1|ID)+access_standard,data=access_surv_ID, "binomial")
summary(accesslm2)
accesslm3 <-glmer(survival~(1|country)+access_standard, data=access_surv_ID, family="binomial")
plot(accesslm3)
print(accesslm3)
summary(accesslm3)
accesslm4 <-glmer(survival~(1|age)+access_standard, data=access_surv_ID, family="binomial")
plot(accesslm4)
print(accesslm4)
summary(accesslm4)
hfplm <- glm(survival~hfp_standard, data=hfp_surv_ID, family="binomial")
plot(hfplm)
print(hfplm)
summary(hfplm)
quasihfplm <- glm(survival~hfp_standard, data=hfp_surv_ID, family="quasibinomial")
summary(quasihfplm)
hfplm2 <- glmer(survival~(1|ID)+hfp_standard,data=hfp_surv_ID, "binomial")
summary(hfplm2)
hfplm2 <- glmer(survival~(1|ID)+hfp_standard,data=hfp_surv_ID, "quasibinomial")
hfplm2 <- glmer(survival~(1|ID)+hfp_standard,data=hfp_surv_ID, "binomial")
summary(hfplm2)
hfplm3 <-glmer(survival~(1|country)+hfp_standard, data=hfp_surv_ID, family="binomial")
plot(hfplm3)
print(hfplm3)
summary(hfplm3)
hfplm4 <-glmer(survival~(1|age)+hfp_standard, data=hfp_surv_ID, family="binomial")
plot(hfplm4)
print(hfplm4)
summary(hfplm4)
summary(accesslm4)
summary(accesslm3)
summary(accesslm2)
View(human_footprint)
quasilmforloss<- glm(survival~forloss_standard,data=forest_surv_ID, family="quasibinomial")
summary(quasilmforloss)
View(survival_rates)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("tidyverse") # loads packages tidyr, ggplot2 and dplyr
library("sf") # load sf package used for spatial data
library ("mapview") # package to create maps
library ("terra") # package to work with rasters
library("lme4") # package for linear regression
theme_set(theme_minimal(base_size = 14)) # set ggplot theme
setwd(here::here())
plots <- file.path(here::here("plots")) # species where to save plots
data.output <- file.path(here::here("output")) # specifies where to save outputs
data.input <- file.path(here::here("data-raw","r-raw"))
survival_rates <- read.csv2(paste0("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c/data-raw/r-raw/survival_rates_23122022.csv"), header=TRUE, sep=";", dec = ".")
forest_loss <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_forloss2022-12-20.rds"))
protected_areas <-readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_wdpa2022-12-21.rds"))
accessibility <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_access2022-12-20.rds"))
human_footprint <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_hfp2022-12-21.rds"))
# forest loss
forest_surv_ID <- survival_rates %>%
left_join(forest_loss,by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,forloss_drivers_prj,country,age_class_calc) %>%
rename(ID=study_ID,survival=calc_surv_rate,forloss=forloss_drivers_prj,age=age_class_calc) %>%
mutate(survival=as.numeric(survival)) %>%
mutate(forloss_standard=scale(forloss))
# protected areas
pas_surv_ID <- survival_rates %>%
left_join(protected_areas,by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,wdpa_bin_prj,country,age_class_calc) %>%
rename(ID=study_ID,survival=calc_surv_rate,wdpa=wdpa_bin_prj,age=age_class_calc) %>%
mutate(survival=as.numeric(survival)) %>%
mutate(wdpa_standard=scale(wdpa))
# accessibility
access_surv_ID <- survival_rates %>%
left_join(accessibility, by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,accessibility,country,age_class_calc) %>%
rename(ID=study_ID,survival=calc_surv_rate, access=accessibility,age=age_class_calc) %>%
mutate(survival=as.numeric(survival)) %>%
mutate(access_standard=scale(access))
# human footprint
hfp_surv_ID <- survival_rates %>%
left_join(human_footprint, by="study_ID") %>%
dplyr::select(study_ID,calc_surv_rate,HFP2009,country, age_class_calc) %>%
rename(ID=study_ID,survival=calc_surv_rate,hfp=HFP2009,age=age_class_calc) %>%
mutate(survival=as.numeric(survival)) %>%
mutate(hfp_standard=scale(hfp))
# forest loss
lmforloss<- glm(survival~forloss_standard,data=forest_surv_ID, family="binomial")
plot(lmforloss)
print(lmforloss)
summary(lmforloss)
quasilmforloss<- glm(survival~forloss_standard,data=forest_surv_ID, family="quasibinomial")
summary(quasilmforloss)
lmforloss2 <- glmer(survival~(1|ID)+forloss_standard,data=forest_surv_ID, "binomial")
summary(lmforloss2)
lmforlosscountry <-glmer(survival~(1|country)+forloss_standard, data=forest_surv_ID, family="binomial")
plot(lmforlosscountry)
print(lmforlosscountry)
summary(lmforlosscountry)
lmforlossage <-glmer(survival~(1|age)+forloss_standard, data=forest_surv_ID, family="binomial")
plot(lmforlossage)
print(lmforlossage)
summary(lmforlossage)
paslm <- glm(survival~wdpa_standard, data=pas_surv_ID, family="binomial")
plot(paslm)
print(paslm)
summary(paslm)
quasipaslm <- glm(survival~wdpa_standard, data=pas_surv_ID, family="quasibinomial")
summary(quasipaslm)
paslm2 <- glmer(survival~(1|ID)+wdpa_standard,data=pas_surv_ID, "binomial")
summary(paslm2)
paslm3 <-glmer(survival~(1|country)+wdpa_standard, data=pas_surv_ID, family="binomial")
plot(paslm3)
print(paslm3)
summary(paslm3)
paslm4 <-glmer(survival~(1|age)+wdpa_standard, data=pas_surv_ID, family="binomial")
plot(paslm4)
print(paslm4)
summary(paslm4)
accesslm <- glm(survival~access_standard, data=access_surv_ID, family="binomial")
plot(accesslm)
print(accesslm)
summary(accesslm)
quasiaccesslm <- glm(survival~access_standard, data=access_surv_ID, family="quasibinomial")
summary(quasiaccesslm)
accesslm2 <- glmer(survival~(1|ID)+access_standard,data=access_surv_ID, "binomial")
summary(accesslm2)
accesslm3 <-glmer(survival~(1|country)+access_standard, data=access_surv_ID, family="binomial")
plot(accesslm3)
print(accesslm3)
summary(accesslm3)
accesslm4 <-glmer(survival~(1|age)+access_standard, data=access_surv_ID, family="binomial")
plot(accesslm4)
print(accesslm4)
summary(accesslm4)
hfplm <- glm(survival~hfp_standard, data=hfp_surv_ID, family="binomial")
plot(hfplm)
print(hfplm)
summary(hfplm)
quasihfplm <- glm(survival~hfp_standard, data=hfp_surv_ID, family="quasibinomial")
summary(quasihfplm)
hfplm2 <- glmer(survival~(1|ID)+hfp_standard,data=hfp_surv_ID, "binomial")
summary(hfplm2)
hfplm3 <-glmer(survival~(1|country)+hfp_standard, data=hfp_surv_ID, family="binomial")
plot(hfplm3)
print(hfplm3)
summary(hfplm3)
hfplm4 <-glmer(survival~(1|age)+hfp_standard, data=hfp_surv_ID, family="binomial")
plot(hfplm4)
print(hfplm4)
summary(hfplm4)
summary(hfplm4)
hfplm3 <-glmer(survival~(1|as.factor(country)+hfp_standard, data=hfp_surv_ID, family="binomial")
hfplm3 <-glmer(survival~(1|(as.factor(country)+hfp_standard, data=hfp_surv_ID, family="binomial")
hfplm3 <-glmer(survival~(1|as.factor(country))+hfp_standard, data=hfp_surv_ID, family="binomial")
hfplm3 <-glmer(survival~(1|country)+hfp_standard, data=hfp_surv_ID, family="binomial")
plot(hfplm3)
print(hfplm3)
summary(hfplm3)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("tidyverse") # loads packages tidyr, ggplot2 and dplyr
library("sf") # load sf package used for spatial data
library ("mapview") # package to create maps
library("rlist") #to work with lists
library("terra")
theme_set(theme_minimal(base_size = 14)) # set ggplot theme
getwd()
setwd("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c")
plots <- file.path(here::here("plots")) # species where to save plots
data.output <- file.path(here::here("output")) # specifies where to save outputs
data.input <- file.path(here::here("data-raw","r-raw"))
study_area_size_data <- read.csv2(paste0(data.input,"/study_coords_20_12_2022.csv"), header=TRUE, sep=";", dec = ".")
summary(study_area_size_data)
str(study_area_size_data)
#extr cting the study area size and taking out the nas
study_area_size_data_no_nas <- study_area_size_data %>%
na.omit() %>%
dplyr:: select(longitude, latitude) %>%
tibble::rowid_to_column("id")
# calculating the radius of the buffer based on the study area size
buffer_size <- study_area_size_data %>%
na.omit() %>%
mutate(radius=(sqrt(study_area_size/pi) * 1000)) %>% # *1000 to convert to km
dplyr::select(radius)
#transforming the coordinates as spatial object
coords <- st_as_sf(study_area_size_data_no_nas, coords=c("longitude","latitude"), crs=4326)
#function to transform the latitude longitute projection of each poitns into the right UTM
lonlat2UTM = function(lonlat) {
utm = (floor((lonlat[1] + 180) / 6) %% 60) + 1
if(lonlat[2] > 0) {
utm + 32600
} else{
utm + 32700
}
}
#to transform in the right projection
transform_list <- function(list, crs_dataframe){
x <- list(0)
for (i in 1: length(crs_dataframe))
x[[i]] <- st_transform(list[[i]], crs_dataframe[i])
return(x)
}
# to create buffers based on a list of spatial objects
buffer_list <- function(list, buffer_size_dataframe){
y <- list(0)
for (i in 1: nrow(buffer_size_dataframe))
y[[i]] <- st_buffer(list[[i]], buffer_size_dataframe[i,])
return(y)
}
#take out the coordinates of the points
coordinates2<- cbind(study_area_size_data_no_nas$longitude, study_area_size_data_no_nas$latitude)
#transforms the coordinates into UTM
coordinatesUTM <- apply(coordinates2, 1, lonlat2UTM)
#creates a list of spatial objects based on their id
ncSplit <- split(coords, f = coords[["id"]])
#using the function to st_transform each element of the list with their corresponding UTM
list_UTM_points <- transform_list(ncSplit, coordinatesUTM)
# Create a list of buffers with their respective radius
buf_proj <- buffer_list(list_UTM_points, buffer_size)
# Retransform the whole shablam into a latitude longitude coordinate system
buf_latlong <- lapply(buf_proj, st_transform, 4326)
#recombining the hwole thing
combined <- list.rbind(buf_latlong)
combined %>%
ggplot() +
geom_sf(lwd = 0.1)
mapview(combined)
map_raster <- terra::rast(paste0(here::here("data-raw","geo-raw"),"/accessibility.tif"))
str(map_raster)
class(map_raster)
crs(map_raster)
buffer_new_projection <- combined %>%
st_transform(crs = crs(map_raster))
extracted_values_mean_access <- raster::extract(map_raster, buffer_new_projection,fun=mean, na.rm=TRUE)
extracted_values_mean_access
saveRDS(extracted_values_mean_access,paste0(data.output,"/data-proc/extracted_values_mean_access",Sys.Date(),".rds"))
combined_buffer_access <- cbind(buffer_new_projection,extracted_values_mean_access)
mapview(combined_buffer_access, zcol="accessibility")
dataframe_combined_buffer_access <- study_area_size_data %>%
na.omit() %>%
cbind(combined_buffer_access)
saveRDS(dataframe_combined_buffer_access,paste0(data.output,"/data-proc/dataframe_combined_buffer_access",Sys.Date(),".rds"))
View(study_area_size_data)
View(study_area_size_data_no_nas)
View(dataframe_combined_buffer_access)
