mutate(forloss_standard=scale(forloss))
lmforloss<- glm(no_cubs~forloss_standard,data=forloss_ls_ID, family="poisson")
plot(lmforloss)
summary(lmforloss)
fit_quasi <- glm(no_cubs~forloss_standard + factor(country), data=forloss_ls_ID, family="quasipoisson")
summary(fit_quasi)
lmforloss<- glm(no_cubs~forloss_standard,data=forloss_ls_ID, family="poisson")
lmforloss<- glm(no_cubs~forloss_standard,data=forloss_ls_ID, family="quasipoisson")
plot(lmforloss)
print(lmforloss)
summary(lmforloss)
fit_quasi
countryglm<- glm(no_cubs~ factor(country), family = "quasipoisson")
countryglm<- glm(no_cubs~ factor(country), data=forloss_ls_ID, family = "quasipoisson")
summary(countryglm)
quasicountryglm<- glm(no_cubs~ factor(country), data=forloss_ls_ID, family = "quasipoisson")
summary(countryglm)
quasilmpas <- glm(no_cubs~wdpa_standard,data=wdpa_ls_ID, family="quasipoisson")
summary(quasilmpas)
paquasicountry <- glm(no_cubs~wdpa_standard + factor(country),data=wdpa_ls_ID, family="quasipoisson")
summary(paquasicountry)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("tidyverse") # loads packages tidyr, ggplot2 and dplyr
library("sf") # load sf package used for spatial data
library ("mapview") # package to create maps
library ("terra") # package to work with rasters
library("lme4") # package for linear regression
theme_set(theme_minimal(base_size = 14)) # set ggplot theme
getwd()
setwd("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c")
plots <- file.path(here::here("plots")) # species where to save plots
data.output <- file.path(here::here("output")) # specifies where to save outputs
data.input <- file.path(here::here("data-raw","r-raw"))
litter_sizes <- read.csv2(paste0(data.input,"/no_cubs_2112022.csv"), header=TRUE, sep=";", dec = ".")
data.input
litter_sizes <- read.csv2(paste0(data.input,"/no_cubs_2112022.csv"), header=TRUE, sep=";", dec = ".")
forest_loss <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_forloss2022-12-20.rds"))
protected_areas <-readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_wdpa2022-12-21.rds"))
accessibility <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_access2022-12-20.rds"))
human_footprint <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_hfp2022-12-21.rds"))
litter_sizes <- read.csv2(paste0("C:\Users\carla\Documents\Master Thesis\canis_lupus_w_lit_osterburg_c\data-raw\r-raw\no_cubs_21122022.csv"), header=TRUE, sep=";", dec = ".")
litter_sizes <- read.csv2(paste0("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c/data-raw/r-raw/no_cubs_21122022.csv"), header=TRUE, sep=";", dec = ".")
# forest loss
forloss_ls_ID <- litter_sizes %>%
left_join(forest_loss,by="study_ID") %>%
dplyr::select(study_ID,no_cubs,forloss_drivers_prj,country) %>%
rename(ID=study_ID,forloss=forloss_drivers_prj) %>%
mutate(no_cubs=as.numeric(no_cubs)) %>%
mutate(forloss_standard=scale(forloss))
# protected areas
wdpa_ls_ID <- litter_sizes %>%
left_join(protected_areas, by="study_ID") %>%
dplyr::select(study_ID,no_cubs,wdpa_bin_prj,country) %>%
rename(ID=study_ID,wdpa=wdpa_bin_prj) %>%
mutate(no_cubs=as.numeric(no_cubs)) %>%
mutate(wdpa_standard=scale(wdpa))
# accessibility
access_ls_ID <- litter_sizes %>%
left_join(accessibility, by="study_ID") %>%
dplyr::select(study_ID,no_cubs,accessibility,country) %>%
rename(ID=study_ID,access=accessibility) %>%
mutate(no_cubs=as.numeric(no_cubs)) %>%
mutate(access_standard=scale(access))
# human footprint
hfp_ls_ID <- litter_sizes %>%
left_join(human_footprint, by="study_ID") %>%
dplyr::select(study_ID,no_cubs,HFP2009,country) %>%
rename(ID=study_ID,hfp=HFP2009) %>%
mutate(no_cubs=as.numeric(no_cubs)) %>%
mutate(hfp_standard=scale(hfp))
lmforloss<- glm(no_cubs~forloss_standard,data=forloss_ls_ID, family="quasipoisson")
plot(lmforloss)
print(lmforloss)
summary(lmforloss)
lmforloss2 <- glmer(no_cubs~(1|country)+forloss_standard,data=forloss_ls_ID, family="poisson")
plot(lmforloss2)
summary(lmforloss2)
lmforloss3 <- lmer(no_cubs~(1|country)+forloss_standard, data=forloss_ls_ID, family="quasipoisson")
lmforloss3 <- glmer(no_cubs~(1|country)+forloss_standard, data=forloss_ls_ID, family="quasipoisson")
lmforloss3 <- glm(no_cubs~(1|country)+forloss_standard, data=forloss_ls_ID, family="quasipoisson")
lmforloss3 <- glm(no_cubs~(1|as.factor(country))+forloss_standard, data=forloss_ls_ID, family="quasipoisson")
fit_quasi <- glm(no_cubs~forloss_standard + factor(country), data=forloss_ls_ID, family="quasipoisson")
summary(fit_quasi)
rm(fit_quasi)
# protected areas
lmpas<- glm(no_cubs~wdpa_standard,data=wdpa_ls_ID, family="poisson")
plot(lmpas)
print(lmpas)
summary(lmpas)
quasilmpas <- glm(no_cubs~wdpa_standard,data=wdpa_ls_ID, family="quasipoisson")
summary(quasilmpas)
lmacc<- glm(no_cubs~access_standard,data=access_ls_ID, family="poisson")
plot(lmacc)
print(lmacc)
summary(lmacc)
lmacc2<- glm(no_cubs~access_standard,data=access_ls_ID, family="quasipoisson")
summary(lmacc2)
lmhfp<- glm(no_cubs~hfp_standard,data=hfp_ls_ID, family="poisson")
plot(lmhfp)
print(lmhfp)
summary(lmhfp)
lmhfp2<- glm(no_cubs~hfp_standard,data=hfp_ls_ID, family="quasipoisson")
plot(lmhfp2)
print(lmhfp2)
summary(lmhfp2)
quasicountry <- glm(no_cubs~hfp_standard + (1|country),data=hfp_ls_ID, family="quasipoisson")
quasicountry <- glm(no_cubs~hfp_standard + (1|study_ID),data=hfp_ls_ID, family="quasipoisson")
quasicountry <- glm(no_cubs~hfp_standard + (1|ID),data=hfp_ls_ID, family="quasipoisson")
lmhfp<- glm(no_cubs~hfp_standard,data=hfp_ls_ID, family="poisson")
plot(lmhfp)
print(lmhfp)
summary(lmhfp)
lmhfp2<- glm(no_cubs~hfp_standard,data=hfp_ls_ID, family="quasipoisson")
plot(lmhfp2)
print(lmhfp2)
summary(lmhfp2)
View(litter_sizes)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("tidyverse") # loads packages tidyr, ggplot2 and dplyr
library("sf") # load sf package used for spatial data
library ("mapview") # package to create maps
library ("terra") # package to work with rasters
library("lme4") # package for linear regression
theme_set(theme_minimal(base_size = 14)) # set ggplot theme
getwd()
setwd("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c")
plots <- file.path(here::here("plots")) # species where to save plots
data.output <- file.path(here::here("output")) # specifies where to save outputs
data.input <- file.path(here::here("data-raw","r-raw"))
litter_sizes <- read.csv2(paste0("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c/data-raw/r-raw/no_pack_21122022.csv"), header=TRUE, sep=";", dec = ".")
forest_loss <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_forloss2022-12-20.rds"))
protected_areas <-readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_wdpa2022-12-21.rds"))
accessibility <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_access2022-12-20.rds"))
human_footprint <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_hfp2022-12-21.rds"))
pack_sizes <- read.csv2(paste0("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c/data-raw/r-raw/no_pack_21122022.csv"), header=TRUE, sep=";", dec = ".")
rm(litter_sizes)
# forest loss
forloss_ps_ID <- pack_sizes %>%
left_join(forest_loss,by="study_ID") %>%
dplyr::select(study_ID,pack_size,forloss_drivers_prj) %>%
rename(ID=study_ID,forloss=forloss_drivers_prj) %>%
mutate(pack_size=as.numeric(pack_size)) %>%
mutate(forloss_standard=scale(forloss))
View(forest_loss)
View(forest_loss)
str(forest_loss)
str(pack_sizes)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("tidyverse") # loads packages tidyr, ggplot2 and dplyr
library("sf") # load sf package used for spatial data
library ("mapview") # package to create maps
library ("terra") # package to work with rasters
library("lme4") # package for linear regression
theme_set(theme_minimal(base_size = 14)) # set ggplot theme
getwd()
setwd("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c")
plots <- file.path(here::here("plots")) # species where to save plots
data.output <- file.path(here::here("output")) # specifies where to save outputs
data.input <- file.path(here::here("data-raw","r-raw"))
litter_sizes <- read.csv2(paste0("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c/data-raw/r-raw/no_cubs_21122022.csv"), header=TRUE, sep=";", dec = ".")
forest_loss <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_forloss2022-12-20.rds"))
protected_areas <-readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_wdpa2022-12-21.rds"))
accessibility <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_access2022-12-20.rds"))
human_footprint <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_hfp2022-12-21.rds"))
str(litter_sizes)
str(forest_loss)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("tidyverse") # loads packages tidyr, ggplot2 and dplyr
library("sf") # load sf package used for spatial data
library ("mapview") # package to create maps
library ("terra") # package to work with rasters
library("lme4") # package for linear regression
theme_set(theme_minimal(base_size = 14)) # set ggplot theme
getwd()
setwd("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c")
plots <- file.path(here::here("plots")) # species where to save plots
data.output <- file.path(here::here("output")) # specifies where to save outputs
data.input <- file.path(here::here("data-raw","r-raw"))
pack_sizes <- read.csv2(paste0("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c/data-raw/r-raw/no_pack_21122022.csv"), header=TRUE, sep=";", dec = ".")
forest_loss <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_forloss2022-12-20.rds"))
protected_areas <-readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_wdpa2022-12-21.rds"))
accessibility <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_access2022-12-20.rds"))
human_footprint <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_hfp2022-12-21.rds"))
str(pack_sizes)
split.data.frame(pack_sizes$study_ID)
mutate(pack_sizes$study_ID,as.character())
transform(pack_sizes$study_ID,as.character())
class(pack_sizes$study_ID)
as.character(pack_sizes$study_ID)
class(pack_sizes$study_ID)
# forest loss
forloss_ps_ID <- pack_sizes %>%
left_join(forest_loss,by="study_ID") %>%
dplyr::select(study_ID,pack_size,forloss_drivers_prj) %>%
rename(ID=study_ID,forloss=forloss_drivers_prj) %>%
mutate(pack_size=as.numeric(pack_size)) %>%
mutate(forloss_standard=scale(forloss))
View(pack_sizes)
pack_sizedf <- as.character(pack_sizes$study_ID)
class(pack_sizedf$study_ID)
pack_sizedf
class(pack_sizedf)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("tidyverse") # loads packages tidyr, ggplot2 and dplyr
library("sf") # load sf package used for spatial data
library ("mapview") # package to create maps
library ("terra") # package to work with rasters
library("lme4") # package for linear regression
theme_set(theme_minimal(base_size = 14)) # set ggplot theme
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("tidyverse") # loads packages tidyr, ggplot2 and dplyr
library("sf") # load sf package used for spatial data
library ("mapview") # package to create maps
library ("terra") # package to work with rasters
library("lme4") # package for linear regression
theme_set(theme_minimal(base_size = 14)) # set ggplot theme
getwd()
setwd("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c")
plots <- file.path(here::here("plots")) # species where to save plots
data.output <- file.path(here::here("output")) # specifies where to save outputs
data.input <- file.path(here::here("data-raw","r-raw"))
litter_sizes <- read.csv2(paste0("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c/data-raw/r-raw/no_cubs_21122022.csv"), header=TRUE, sep=";", dec = ".")
forest_loss <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_forloss2022-12-20.rds"))
protected_areas <-readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_wdpa2022-12-21.rds"))
accessibility <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_access2022-12-20.rds"))
human_footprint <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_hfp2022-12-21.rds"))
str(forest_loss)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("tidyverse") # loads packages tidyr, ggplot2 and dplyr
library("sf") # load sf package used for spatial data
library ("mapview") # package to create maps
library ("terra") # package to work with rasters
library("lme4") # package for linear regression
theme_set(theme_minimal(base_size = 14)) # set ggplot theme
getwd()
setwd("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c")
plots <- file.path(here::here("plots")) # species where to save plots
data.output <- file.path(here::here("output")) # specifies where to save outputs
data.input <- file.path(here::here("data-raw","r-raw"))
pack_sizes <- read.csv2(paste0("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c/data-raw/r-raw/no_pack_21122022.csv"), header=TRUE, sep=";", dec = ".")
forest_loss <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_forloss2022-12-20.rds"))
protected_areas <-readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_wdpa2022-12-21.rds"))
accessibility <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_access2022-12-20.rds"))
human_footprint <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_hfp2022-12-21.rds"))
str(pack_sizes)
pack_sizes$study_ID <- as.character(pack_sizes$study_ID)
class(pack_sizes$study_ID)
str(pack_sizes)
# forest loss
forloss_ps_ID <- pack_sizes %>%
left_join(forest_loss,by="study_ID") %>%
dplyr::select(study_ID,pack_size,forloss_drivers_prj) %>%
rename(ID=study_ID,forloss=forloss_drivers_prj) %>%
mutate(pack_size=as.numeric(pack_size)) %>%
mutate(forloss_standard=scale(forloss))
# protected areas
wdpa_ps_ID <- pack_sizes %>%
left_join(protected_areas, by="study_ID") %>%
dplyr::select(study_ID,pack_size,wdpa_bin_prj) %>%
rename(ID=study_ID,wdpa=wdpa_bin_prj) %>%
mutate(pack_size=as.numeric(pack_size)) %>%
mutate(wdpa_standard=scale(wdpa))
# accessibility
access_ps_ID <- pack_sizes %>%
left_join(accessibility, by="study_ID") %>%
dplyr::select(study_ID,pack_size,accessibility) %>%
rename(ID=study_ID,access=accessibility) %>%
mutate(pack_size=as.numeric(pack_size)) %>%
mutate(access_standard=scale(access))
# human footprint
hfp_ps_ID <- pack_sizes %>%
left_join(human_footprint, by="study_ID") %>%
dplyr::select(study_ID,pack_size,HFP2009) %>%
rename(ID=study_ID,hfp=HFP2009) %>%
mutate(pack_size=as.numeric(pack_size)) %>%
mutate(hfp_standard=scale(hfp))
# forest loss
lmforloss<- glm(pack_size~forloss_standard,data=forloss_ps_ID, family="poisson")
plot(lmforloss)
print(lmforloss)
summary(lmforloss)
lmforloss2<- glm(pack_size~forloss_standard,data=forloss_ps_ID, family="quasipoisson")
plot(lmforloss2)
print(lmforloss2)
summary(lmforloss2)
View(forest_loss)
View(pack_sizes)
# protected areas
lmpas<- glm(pack_size~wdpa_standard,data=wdpa_ps_ID, family="poisson")
plot(lmpas)
print(lmpas)
summary(lmpas)
lmpas2<- glm(pack_size~wdpa_standard,data=wdpa_ps_ID, family="quasipoisson")
plot(lmpas2)
print(lmpas2)
summary(lmpas2)
lmacc<- glm(pack_size~access_standard,data=access_ps_ID, family="poisson")
plot(lmacc)
print(lmacc)
summary(lmacc)
lmacc2<- glm(pack_size~access_standard,data=access_ps_ID, family="quasipoisson")
plot(lmacc2)
print(lmacc2)
summary(lmacc2)
lmhfp<- glm(pack_size~hfp_standard,data=hfp_ps_ID, family="poisson")
plot(lmhfp)
print(lmhfp)
summary(lmhfp)
lmhfp2<- glm(pack_size~hfp_standard,data=hfp_ps_ID, family="quasipoisson")
plot(lmhfp2)
print(lmhfp2)
summary(lmhfp2)
str(pack_sizes)
View(lmforloss2)
summary(lmhfp2)
summary(lmhfp)
summary(lmhfp2)
lmforloss3 <- lmer(pack_size~(1|ID)+forloss_standard, data =forloss_ps_ID, family="poisson")
lmforloss3 <- glmer(pack_size~(1|ID)+forloss_standard, data =forloss_ps_ID, family="poisson")
plot(lmforloss3)
print(lmforloss3)
summary(lmforloss3)
lmforloss3 <- glmer(pack_size~(1|ID)+forloss_standard, data =forloss_ps_ID, family="quasipoisson")
lmforloss3 <- lmer(pack_size~(1|ID)+forloss_standard, data =forloss_ps_ID, family="quasipoisson")
lmforloss3 <- glmer(pack_size~(1|ID)+forloss_standard, data =forloss_ps_ID, family="quasipoisson")
lmforloss3 <- glm(pack_size~(1|ID)+forloss_standard, data =forloss_ps_ID, family="quasipoisson")
# forest loss
forloss_ps_ID <- pack_sizes %>%
left_join(forest_loss,by="study_ID") %>%
dplyr::select(study_ID,pack_size,forloss_drivers_prj,country) %>%
rename(ID=study_ID,forloss=forloss_drivers_prj) %>%
mutate(pack_size=as.numeric(pack_size)) %>%
mutate(forloss_standard=scale(forloss))
# protected areas
wdpa_ps_ID <- pack_sizes %>%
left_join(protected_areas, by="study_ID") %>%
dplyr::select(study_ID,pack_size,wdpa_bin_prj,country) %>%
rename(ID=study_ID,wdpa=wdpa_bin_prj) %>%
mutate(pack_size=as.numeric(pack_size)) %>%
mutate(wdpa_standard=scale(wdpa))
# accessibility
access_ps_ID <- pack_sizes %>%
left_join(accessibility, by="study_ID") %>%
dplyr::select(study_ID,pack_size,accessibility,country) %>%
rename(ID=study_ID,access=accessibility) %>%
mutate(pack_size=as.numeric(pack_size)) %>%
mutate(access_standard=scale(access))
# human footprint
hfp_ps_ID <- pack_sizes %>%
left_join(human_footprint, by="study_ID") %>%
dplyr::select(study_ID,pack_size,HFP2009,country) %>%
rename(ID=study_ID,hfp=HFP2009) %>%
mutate(pack_size=as.numeric(pack_size)) %>%
mutate(hfp_standard=scale(hfp))
lmforloss3 <- glm(pack_size~(1|country)+forloss_standard, data =forloss_ps_ID, family="quasipoisson")
lmforloss3 <- glm(pack_size~(1|country)+forloss_standard, data =forloss_ps_ID, family="poisson")
lmforloss3 <- glmm(pack_size~(1|country)+forloss_standard, data =forloss_ps_ID, family="poisson")
lmforloss3 <- glmer(pack_size~(1|country)+forloss_standard, data =forloss_ps_ID, family="poisson")
print(lmforloss3)
summary(lmforloss3)
summary(lmforloss)
View(pack_sizes)
print(lmforloss3)
summary(lmhfp)
summary(lmacc)
summary(lmpas2)
summary(lmforloss)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("tidyverse") # loads packages tidyr, ggplot2 and dplyr
library("sf") # load sf package used for spatial data
library ("mapview") # package to create maps
library ("terra") # package to work with rasters
library("lme4") # package for linear regression
theme_set(theme_minimal(base_size = 14)) # set ggplot theme
getwd()
setwd("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c")
plots <- file.path(here::here("plots")) # species where to save plots
data.output <- file.path(here::here("output")) # specifies where to save outputs
data.input <- file.path(here::here("data-raw","r-raw"))
litter_sizes <- read.csv2(paste0("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c/data-raw/r-raw/no_cubs_21122022.csv"), header=TRUE, sep=";", dec = ".")
forest_loss <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_forloss2022-12-20.rds"))
protected_areas <-readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_wdpa2022-12-21.rds"))
accessibility <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_access2022-12-20.rds"))
human_footprint <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_hfp2022-12-21.rds"))
str(forest_loss)
# forest loss
forloss_ls_ID <- litter_sizes %>%
left_join(forest_loss,by="study_ID") %>%
dplyr::select(study_ID,no_cubs,forloss_drivers_prj,country) %>%
rename(ID=study_ID,forloss=forloss_drivers_prj) %>%
mutate(no_cubs=as.numeric(no_cubs)) %>%
mutate(forloss_standard=scale(forloss))
# protected areas
wdpa_ls_ID <- litter_sizes %>%
left_join(protected_areas, by="study_ID") %>%
dplyr::select(study_ID,no_cubs,wdpa_bin_prj,country) %>%
rename(ID=study_ID,wdpa=wdpa_bin_prj) %>%
mutate(no_cubs=as.numeric(no_cubs)) %>%
mutate(wdpa_standard=scale(wdpa))
# accessibility
access_ls_ID <- litter_sizes %>%
left_join(accessibility, by="study_ID") %>%
dplyr::select(study_ID,no_cubs,accessibility,country) %>%
rename(ID=study_ID,access=accessibility) %>%
mutate(no_cubs=as.numeric(no_cubs)) %>%
mutate(access_standard=scale(access))
# human footprint
hfp_ls_ID <- litter_sizes %>%
left_join(human_footprint, by="study_ID") %>%
dplyr::select(study_ID,no_cubs,HFP2009,country) %>%
rename(ID=study_ID,hfp=HFP2009) %>%
mutate(no_cubs=as.numeric(no_cubs)) %>%
mutate(hfp_standard=scale(hfp))
lmforloss<- glm(no_cubs~forloss_standard,data=forloss_ls_ID, family="quasipoisson")
plot(lmforloss)
print(lmforloss)
summary(lmforloss)
lmforloss2 <- glmer(no_cubs~(1|country)+forloss_standard,data=forloss_ls_ID, family="poisson")
plot(lmforloss2)
summary(lmforloss2)
# protected areas
lmpas<- glm(no_cubs~wdpa_standard,data=wdpa_ls_ID, family="poisson")
plot(lmpas)
print(lmpas)
summary(lmpas)
quasilmpas <- glm(no_cubs~wdpa_standard,data=wdpa_ls_ID, family="quasipoisson")
summary(quasilmpas)
lmacc<- glm(no_cubs~access_standard,data=access_ls_ID, family="poisson")
plot(lmacc)
print(lmacc)
summary(lmacc)
lmacc2<- glm(no_cubs~access_standard,data=access_ls_ID, family="quasipoisson")
summary(lmacc2)
lmhfp<- glm(no_cubs~hfp_standard,data=hfp_ls_ID, family="poisson")
plot(lmhfp)
print(lmhfp)
summary(lmhfp)
lmhfp2<- glm(no_cubs~hfp_standard,data=hfp_ls_ID, family="quasipoisson")
plot(lmhfp2)
print(lmhfp2)
summary(lmhfp2)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library("tidyverse") # loads packages tidyr, ggplot2 and dplyr
library("sf") # load sf package used for spatial data
library ("mapview") # package to create maps
library ("terra") # package to work with rasters
library("lme4") # package for linear regression
theme_set(theme_minimal(base_size = 14)) # set ggplot theme
getwd()
setwd("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c")
plots <- file.path(here::here("plots")) # species where to save plots
data.output <- file.path(here::here("output")) # specifies where to save outputs
data.input <- file.path(here::here("data-raw","r-raw"))
pack_sizes <- read.csv2(paste0("C:/Users/carla/Documents/Master Thesis/canis_lupus_w_lit_osterburg_c/data-raw/r-raw/no_pack_21122022.csv"), header=TRUE, sep=";", dec = ".")
forest_loss <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_forloss2022-12-20.rds"))
protected_areas <-readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_wdpa2022-12-21.rds"))
accessibility <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_access2022-12-20.rds"))
human_footprint <- readRDS(paste0(data.output, "/data-proc/dataframe_combined_buffer_hfp2022-12-21.rds"))
# Need to turn study_ID into a character
pack_sizes$study_ID <- as.character(pack_sizes$study_ID)
class(pack_sizes$study_ID)
str(pack_sizes)
# forest loss
forloss_ps_ID <- pack_sizes %>%
left_join(forest_loss,by="study_ID") %>%
dplyr::select(study_ID,pack_size,forloss_drivers_prj,country) %>%
rename(ID=study_ID,forloss=forloss_drivers_prj) %>%
mutate(pack_size=as.numeric(pack_size)) %>%
mutate(forloss_standard=scale(forloss))
# protected areas
wdpa_ps_ID <- pack_sizes %>%
left_join(protected_areas, by="study_ID") %>%
dplyr::select(study_ID,pack_size,wdpa_bin_prj,country) %>%
rename(ID=study_ID,wdpa=wdpa_bin_prj) %>%
mutate(pack_size=as.numeric(pack_size)) %>%
mutate(wdpa_standard=scale(wdpa))
# accessibility
access_ps_ID <- pack_sizes %>%
left_join(accessibility, by="study_ID") %>%
dplyr::select(study_ID,pack_size,accessibility,country) %>%
rename(ID=study_ID,access=accessibility) %>%
mutate(pack_size=as.numeric(pack_size)) %>%
mutate(access_standard=scale(access))
# human footprint
hfp_ps_ID <- pack_sizes %>%
left_join(human_footprint, by="study_ID") %>%
dplyr::select(study_ID,pack_size,HFP2009,country) %>%
rename(ID=study_ID,hfp=HFP2009) %>%
mutate(pack_size=as.numeric(pack_size)) %>%
mutate(hfp_standard=scale(hfp))
lmforloss3 <- glmer(pack_size~(1|country)+forloss_standard, data =forloss_ps_ID, family="poisson")
lmforloss3 <- glmer(pack_size~(1|country)+forloss_standard, data =forloss_ps_ID, family="poisson")
plot(lmforloss3)
plot(lmforloss3)
print(lmforloss3)
summary(lmforloss3)
summary(lmforloss3)
ranova(lmforloss3)
libarary("lmerTest")
library("lmerTest")
install.packages("lmerTest")
library("lmerTest")
ranova(lmforloss3)
